@page "/produtos"

<PageTitle>Medicamentos</PageTitle>

@inject NotificationService _notificationService
@inject NavigationManager _navigationManager

@inject IProducsService _productsService

<div class="row">
    <div class="col">
        <h1>Medicamentos e Materiais</h1>
    </div>
    <div class="col">
        <a type="button" class="btn btn-outline-success float-end" href="produtos/novo">
            <i class="bi bi-folder-plus p-2"></i>Novo
        </a>
    </div>
</div>

<div class="input-group mb-3">
    <span class="input-group-text" id="inputGroup-sizing-default">Pesquisa por Nome</span>
    <input @bind="PartialProductName" type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default">
    <button @onclick="@(async (args) => await SearchProducts(args))" type="button" class="btn btn-outline-primary btn-lg">
        <i class="bi bi-search p-2"></i>Procurar
    </button>
</div>

@foreach(var product in products)
{
    <div style="max-width:30%;" class="card mb-4 rounded-3 shadow-sm">
        <div class="card-header py-3">
            <h4 class="my-0 fw-normal">@product.Name</h4>
        </div>
        <div style="padding-bottom:0px;" class="card-body">
            <h6 class="card-title pricing-card-title">Descrição:</h6>
            <p class="card-title pricing-card-title">@product.Description</p>
        </div>
        @if (product.SelectedDrugsConcentrations.Any())
        {
            <hr/>
            <div style="padding-top:0px;" class="card-body">
                <h3 class="card-title pricing-card-title">Concentrações:</h3>
                <ul class="list-unstyled mt-3 mb-4">
                    @foreach (var concentration in product.SelectedDrugsConcentrations)
                    {
                        <li>@concentration.ConcentrationDescription</li>
                    }
                </ul>
                <button @onclick="(args) => NavigateToUpdateProduct(args, product.Id)" type="button" 
                    class="w-100 btn btn-lg btn-outline-primary">Editar</button>
            </div>
        }
        else
        {
            <hr/>
            <div style="padding-top:0px;" class="card-body">
                <button @onclick="(args) => NavigateToUpdateProduct(args, product.Id)" type="button" 
                    class="w-100 btn btn-lg btn-outline-primary">Editar</button>
            </div>
        }
    </div>
}

@code {
    string? PartialProductName { get; set; }
    List<ProductVM> products { get; set; } = new();

    void NavigateToUpdateProduct(MouseEventArgs args, string? productId)
    {
        _navigationManager.NavigateTo($"/produtos/editar/{productId}");
    }

    async Task SearchProducts(MouseEventArgs args)
    {
        if (ValidateProductsSearch())
        {
            products = await _productsService.SearchProductByName(PartialProductName);
        }
    }

    bool ValidateProductsSearch()
    {
        return true;
    }
}
